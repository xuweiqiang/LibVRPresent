// $Change: 395037 $
// CMMB_DLL.h : main header file for the ARGO_CMMB_SCALER application
//

#ifndef	_CMMB_DLL_H_
#define _CMMB_DLL_H_

#include <Windev.h>
#include "stdafx.h"
#include <stdio.h>
#include "Winbase.h"
#include "columbus_typedefs.h"


#define APP_BUILD_FOR_CE6       1
#define AVIN_SRC	0
#define CMMB_SRC	1
#define REPLAY_SRC	CMMB_SRC


#define FILE_DEVICE_CUSTOM_ATS  32769	//32768-65535 are reserved for use by OEMs and IHVs.
#define FUNCTION_CODE_ATS_BASE   2048	//codes 2048-4095 are reserved for OEMs and IHVs

//for Jpd module
#define FUNCTION_CODE_JPD_SET_BUFF   FUNCTION_CODE_ATS_BASE+21
#define FUNCTION_CODE_JPD_SET_FILE   FUNCTION_CODE_ATS_BASE+22
#define FUNCTION_CODE_JPD_CLR_BUFF   FUNCTION_CODE_ATS_BASE+23
#define FUNCTION_CODE_SCALER_PATH	FUNCTION_CODE_ATS_BASE+24
#define FUNCTION_CODE_SCALER_H_W   FUNCTION_CODE_ATS_BASE+25
#define FUNCTION_CODE_SW_SCALER   FUNCTION_CODE_ATS_BASE+26
#define FUNCTION_CODE_SW_GOP   	FUNCTION_CODE_ATS_BASE+27
#define FUNCTION_CODE_SET_ALPHA   	FUNCTION_CODE_ATS_BASE+28
#define FUNCTION_CODE_SCL_FLUSH   	FUNCTION_CODE_ATS_BASE+29
#define FUNCTION_CODE_COLOR_KEY   	FUNCTION_CODE_ATS_BASE+30
#define FUNCTION_CODE_POWER_EN   	FUNCTION_CODE_ATS_BASE+31
#define FUNCTION_CODE_REC_YUV   	FUNCTION_CODE_ATS_BASE+32

//for Jpd module
#define IOCTL_JPD_SET_BUFF  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_JPD_SET_BUFF, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SET_FILE  		CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_JPD_SET_FILE, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_CLR_BUFF  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_JPD_CLR_BUFF, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SCALER_PATH  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SCALER_PATH, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SCALER_SIZE  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SCALER_H_W, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SW2SCALER  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SW_SCALER, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SW2GOP  		CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SW_GOP, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SET_ALPHA  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SET_ALPHA, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_SCL_FLUSH  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_SCL_FLUSH, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_COLOR_KEY  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_COLOR_KEY, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_PDOWN_ARGO  	CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_POWER_EN, METHOD_BUFFERED ,FILE_ANY_ACCESS)
#define IOCTL_JPD_REC_YUV  	       CTL_CODE( FILE_DEVICE_CUSTOM_ATS, FUNCTION_CODE_REC_YUV, METHOD_BUFFERED ,FILE_ANY_ACCESS)

//for map physical addr

//for map physical addr
//C3

#ifdef MSTAR2531_Num5
    #define IOCTL_VIRTUAL_COPY_EX 	CTL_CODE (FILE_DEVICE_UNKNOWN,2058,METHOD_BUFFERED,FILE_ANY_ACCESS)
#else
    #ifdef MSTAR2531
    //C4&c3
    #define IOCTL_VIRTUAL_COPY_EX   CTL_CODE(FILE_DEVICE_UNKNOWN,2063,METHOD_BUFFERED,FILE_ANY_ACCESS)
    #else
    #define IOCTL_VIRTUAL_COPY_EX 	CTL_CODE (FILE_DEVICE_UNKNOWN,2058,METHOD_BUFFERED,FILE_ANY_ACCESS)
#endif
#endif
#define IOCTL_SCALER_CONNECT                CTL_CODE(FILE_DEVICE_SERIAL_PORT, 1, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_DISCONNECT             CTL_CODE(FILE_DEVICE_SERIAL_PORT, 2, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_ON_OFF_SCREEN_MUTE     CTL_CODE(FILE_DEVICE_SERIAL_PORT, 3, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_ON_OFF_OSD             CTL_CODE(FILE_DEVICE_SERIAL_PORT, 4, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_INITM9            CTL_CODE(FILE_DEVICE_SERIAL_PORT, 5, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_SETWINDOW              CTL_CODE(FILE_DEVICE_SERIAL_PORT, 6, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_SCALER_SETWINDOW_CMMB            CTL_CODE(FILE_DEVICE_SERIAL_PORT, 8, METHOD_NEITHER, FILE_ANY_ACCESS)


typedef enum
{
    SCALER_SRC_BT656   = 0,
    SCALER_SRC_MEM     = 1,
    SCALER_SRC_MAX     = 2,
}SCALER_CONNECT_SRC_TYPE;

typedef struct
{
    BOOLEAN bEn;
    U8 u8R;
    U8 u8G;
    U8 u8B;
}Scaler_ScreenMute_Config_st;

typedef struct{
    SCALER_CONNECT_SRC_TYPE SrcType;
    U16 u16SrcRect_X;
    U16 u16SrcRect_Y;
    U16 u16SrcRect_Width;
    U16 u16SrcRect_Height;
    U16 u16Src_Width;
    U16 u16Src_Height;
    U16 u16Disp_Width;
    U16 u16Disp_Height;
    BOOLEAN bInterace;
    BOOLEAN bMEM_422;
}Scaler_Connect_Config_st;

typedef struct{
    SCALER_CONNECT_SRC_TYPE SrcType;
    U16 u16SrcRect_X;
    U16 u16SrcRect_Y;
    U16 u16SrcRect_Width;
    U16 u16SrcRect_Height;
    U16 u16Src_Width;
    U16 u16Src_Height;
    U16 u16DispRect_X;
    U16 u16DispRect_Y;
    U16 u16DispRect_Width;
    U16 u16DispRect_Height;
    BOOLEAN bInterace;
    BOOLEAN bMEM_422;
}Scaler_SetWindow_st;

typedef struct
{
U32 u32colorkey;
U8  u8FlagEn;
}COLOR_KEY_st,*PCOLOR_KEY_st;

#endif // _CMMB_DLL_H_
